/**********************************
 * File: pindefs.c
 * InVue Security Products
 * Copyright 2022
 **********************************/

#include "pindefs.h"

#include "stm32g070xx.h"
#include "stm32g0xx.h"



// pin_config_t const pin_defs[NUM_PINS] =  // making this unconst so we can modify it at runtime if we're running on the nucleo board
const pin_config_t pin_defs[NUM_PINS] =
{
		// 	Pin			Mode					Pull			Speed			   Alternate
  {		GPIO_PIN_8,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED1
  {		GPIO_PIN_6,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED2
  {		GPIO_PIN_10, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED3
  {		GPIO_PIN_15, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED4
  {		GPIO_PIN_1,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED5
  {		GPIO_PIN_3,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED6
  {		GPIO_PIN_9,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED7
  {		GPIO_PIN_7,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED8
  {		GPIO_PIN_11, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED9
  {		GPIO_PIN_0,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED10
  {		GPIO_PIN_2,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED11
  {		GPIO_PIN_3,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED12
  {		GPIO_PIN_14, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_IR_LED
  {		GPIO_PIN_4,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_STROBE
  {		GPIO_PIN_13, GPIO_MODE_INPUT,        GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IR_DETECT
#if (0 == IS_MULE_BOARD)
  {		GPIO_PIN_1,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_MAINLED
#else
  {		GPIO_PIN_12, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_MAINLED
#endif
  {		GPIO_PIN_15, GPIO_MODE_INPUT,        GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_VIN_DETECT
  {		GPIO_PIN_5,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_BATT_EN
  {		GPIO_PIN_9, GPIO_MODE_AF_PP,         GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	GPIO_AF2_TIM17}, // IO_PIEZO

  {		GPIO_PIN_6, GPIO_MODE_AF_PP,         GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	GPIO_AF0_USART1}, 	// IO_USART1_IRDOT_TX
  {		GPIO_PIN_7, GPIO_MODE_AF_PP,         GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	GPIO_AF0_USART1}, 	// IO_USART1_IRDOT_RX
  {		GPIO_PIN_2, GPIO_MODE_AF_PP,         GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	GPIO_AF1_USART2}, 	// IO_USART2_POWER
  {		GPIO_PIN_8, GPIO_MODE_AF_PP,         GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	GPIO_AF4_USART3}, 	// IO_USART3_LORA

  {		GPIO_PIN_5,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_ID1
  {		GPIO_PIN_7,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_ID2
#if (0 == IS_MULE_BOARD)
  {		GPIO_PIN_12, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID3
#else
  {		GPIO_PIN_1,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID3
#endif
  {		GPIO_PIN_10, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID4
  {		GPIO_PIN_12, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID5
  {		GPIO_PIN_14, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID6
  {		GPIO_PIN_6, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID7
  {		GPIO_PIN_0, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID8
  {		GPIO_PIN_2, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID9
  {		GPIO_PIN_11, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID10
  {		GPIO_PIN_13, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID11
  {		GPIO_PIN_15, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u} 	// IO_ID12
};

#ifdef USING_NUCLEO
pin_config_t nucleo_board_pin_defs[NUM_PINS] =
{
		// 	Pin			Mode					Pull			Speed			   Alternate
  {		GPIO_PIN_8,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED1
  {		GPIO_PIN_6,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED2
  {		GPIO_PIN_10, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED3
  {		GPIO_PIN_15, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED4
  {		GPIO_PIN_1,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED5
  {		GPIO_PIN_3,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED6
  {		GPIO_PIN_9,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED7
  {		GPIO_PIN_7,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED8
  {		GPIO_PIN_11, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED9
  {		GPIO_PIN_0,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED10
  {		GPIO_PIN_2,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED11
  {		GPIO_PIN_3,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_LED12
  {		GPIO_PIN_2,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_IR_LED  *** DIFFERENT ON NUCLEO ***
  {		GPIO_PIN_4,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_STROBE
  {		GPIO_PIN_13, GPIO_MODE_INPUT,        GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IR_DETECT
#if (0 == IS_MULE_BOARD)
  {		GPIO_PIN_1,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_MAINLED
#else
  {		GPIO_PIN_12, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_MAINLED
#endif
  {		GPIO_PIN_5,  GPIO_MODE_INPUT,        GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_VIN_DETECT  *** DIFFERENT ON NUCLEO ***
  {		GPIO_PIN_5,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_BATT_EN
  {		GPIO_PIN_9,  GPIO_MODE_AF_PP,         GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	GPIO_AF2_TIM17}, // IO_PIEZO
  {		GPIO_PIN_6,  GPIO_MODE_AF_PP,         GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	GPIO_AF0_USART1}, 	// IO_USART1_IRDOT
  {		GPIO_PIN_2,  GPIO_MODE_AF_PP,         GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	GPIO_AF1_USART2}, 	// IO_USART2_POWER
  {		GPIO_PIN_10, GPIO_MODE_AF_PP,         GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	GPIO_AF0_USART3}, 	// IO_USART3_LORA    *** DIFFERENT ON NUCLEO ***
  {		GPIO_PIN_0,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_ID1  *** DIFFERENT ON NUCLEO ***
  {		GPIO_PIN_7,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u}, 	// IO_ID2
#if (0 == IS_MULE_BOARD)
  {		GPIO_PIN_12, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID3
#else
  {		GPIO_PIN_1,  GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID3
#endif
  {		GPIO_PIN_10, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID4
  {		GPIO_PIN_12, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID5
  {		GPIO_PIN_14, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID6
  {		GPIO_PIN_6, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID7
  {		GPIO_PIN_0, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID8
  {		GPIO_PIN_2, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID9
  {		GPIO_PIN_11, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID10
  {		GPIO_PIN_13, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u},	// IO_ID11
  {		GPIO_PIN_15, GPIO_MODE_OUTPUT_PP,    GPIO_NOPULL,    GPIO_SPEED_FREQ_LOW,  	0u} 	// IO_ID12
};
#endif

//pin_port_t* const port_defs[NUM_PINS] =  // making this unconst so we can modify it at runtime if we're running on the nucleo board
pin_port_t* port_defs[NUM_PINS] =
{
  GPIOA,  // IO_LED1
  GPIOC,  // IO_LED2
  GPIOA,  // IO_LED3
  GPIOA,  // IO_LED4
  GPIOD,  // IO_LED5
  GPIOD,  // IO_LED6
  GPIOA,  // IO_LED7
  GPIOC,  // IO_LED8
  GPIOA,  // IO_LED9
  GPIOD,  // IO_LED10
  GPIOD,  // IO_LED11
  GPIOB,  // IO_LED12
  GPIOC,  // IO_IR_LED
  GPIOB,  // IO_STROBE
  GPIOC,  // IR_DETECT
#if (0 == IS_MULE_BOARD)
  GPIOB,  // IO_MAINLED
#else
  GPIOA,  // IO_MAINLED
#endif
  GPIOC,  // IO_VIN_DETECT
  GPIOB,  // IO_BATT_EN
  GPIOB,  // IO_PIEZO
  GPIOB,  // IO_USART1_IRDOT_TX
  GPIOB,  // IO_USART1_IRDOT_RX
  GPIOA,  // IO_USART2_POWER
  GPIOB,  // IO_USART3_LORA
  GPIOA,  // IO_ID1
  GPIOA,  // IO_ID2
#if (0 == IS_MULE_BOARD)
  GPIOA,  // IO_ID3
#else
  GPIOB,  // IO_ID3
#endif
  GPIOB,  // IO_ID4
  GPIOB,  // IO_ID5
  GPIOB,  // IO_ID6
  GPIOA,  // IO_ID7
  GPIOB,  // IO_ID8
  GPIOB,  // IO_ID9
  GPIOB,  // IO_ID10
  GPIOB,  // IO_ID11
  GPIOB   // IO_ID12
};



#ifdef USING_NUCLEO
pin_port_t* nucleo_board_port_defs[NUM_PINS] =
{
  GPIOA,  // IO_LED1
  GPIOC,  // IO_LED2
  GPIOA,  // IO_LED3
  GPIOA,  // IO_LED4
  GPIOD,  // IO_LED5
  GPIOD,  // IO_LED6
  GPIOA,  // IO_LED7
  GPIOC,  // IO_LED8
  GPIOA,  // IO_LED9
  GPIOD,  // IO_LED10
  GPIOD,  // IO_LED11
  GPIOB,  // IO_LED12
  GPIOC,  // IO_IR_LED
  GPIOB,  // IO_STROBE
  GPIOC,  // IR_DETECT
#if (0 == IS_MULE_BOARD)
  GPIOB,  // IO_MAINLED
#else
  GPIOA,  // IO_MAINLED
#endif
  GPIOC,  // IO_VIN_DETECT
  GPIOB,  // IO_BATT_EN
  GPIOB,  // IO_PIEZO
  GPIOB,  // IO_USART1_IRDOT
  GPIOA,  // IO_USART2_POWER
  GPIOC,  // IO_USART3_LORA    *** DIFFERENT ON NUCLEO ***
  GPIOC,  // IO_ID1            *** DIFFERENT ON NUCLEO ***
  GPIOA,  // IO_ID2
#if (0 == IS_MULE_BOARD)
  GPIOA,  // IO_ID3
#else
  GPIOB,  // IO_ID3
#endif
  GPIOB,  // IO_ID4
  GPIOB,  // IO_ID5
  GPIOB,  // IO_ID6
  GPIOA,  // IO_ID7
  GPIOB,  // IO_ID8
  GPIOB,  // IO_ID9
  GPIOB,  // IO_ID10
  GPIOB,  // IO_ID11
  GPIOB   // IO_ID12
};
#endif
